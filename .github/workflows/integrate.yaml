# https://docs.github.com/en/actions

name: "Integrate"

on: # yamllint disable-line rule:truthy
  pull_request: null
  push:
    branches:
      - "main"

jobs:
  backward-compatibility-analysis:
    name: "Backward-Compatibility Analysis"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - "7.4"

        dependencies:
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.2.2"
        with:
          fetch-depth: 0

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.32.0"
        with:
          coverage: "none"
          extensions: "none, bcmath, ctype, curl, dom, intl, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.9.2"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.9.2"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Run backward-compatibility analysis with roave/backward-compatibility-check"
        run: "tools/roave-backward-compatibility-check --ansi --format=github-actions --from=1.1.0"

  code-coverage:
    name: "Code Coverage"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - "7.4"

        dependencies:
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.2.2"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.32.0"
        with:
          coverage: "xdebug"
          extensions: "none, bcmath, ctype, curl, dom, intl, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Set up problem matchers for phpunit/phpunit"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/phpunit.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.9.2"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.9.2"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        env:
          XDEBUG_MODE: "coverage"
        run: "vendor/bin/phpunit --colors=always --configuration=phpunit.xml --coverage-clover=.build/phpunit/clover.xml"

      - name: "Send code coverage report to codecov.io"
        uses: "codecov/codecov-action@v5.4.2"
        with:
          files: ".build/phpunit/logs/clover.xml"
          token: "${{ secrets.CODECOV_TOKEN }}"

  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - "7.4"

        dependencies:
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.2.2"

      - name: "Lint YAML files"
        uses: "ibiqlik/action-yamllint@v3.1.1"
        with:
          config_file: ".yamllint.yaml"
          file_or_dir: "."
          strict: true

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.32.0"
        with:
          coverage: "none"
          extensions: "none, bcmath, ctype, curl, dom, intl, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Run ergebnis/composer-normalize"
        run: "tools/composer-normalize --dry-run"

      - name: "Create cache directory for friendsofphp/php-cs-fixer"
        run: "mkdir -p .build/php-cs-fixer/"

      - name: "Cache cache directory for friendsofphp/php-cs-fixer"
        uses: "actions/cache@v4"
        with:
          path: ".build/php-cs-fixer/"
          key: "php-${{ matrix.php-version }}-php-cs-fixer-${{ github.ref_name }}"
          restore-keys: |
            php-${{ matrix.php-version }}-php-cs-fixer-main
            php-${{ matrix.php-version }}-php-cs-fixer-

      - name: "Run friendsofphp/php-cs-fixer"
        run: "tools/php-cs-fixer fix --config=.php-cs-fixer.php --diff --diff-format=udiff --dry-run --verbose"

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - "7.4"

        dependencies:
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.2.2"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.32.0"
        with:
          coverage: "none"
          extensions: "none, bcmath, ctype, curl, dom, intl, json, mbstring, opcache, pcntl, phar, posix, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.9.2"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.9.2"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Cache cache directory for vimeo/psalm"
        uses: "actions/cache@v4"
        with:
          path: ".build/psalm/"
          key: "php-${{ matrix.php-version }}-psalm-${{ github.sha }}"
          restore-keys: "php-${{ matrix.php-version }}-psalm-"

      - name: "Run vimeo/psalm"
        run: "tools/psalm --config=psalm.xml --diff --diff-methods --shepherd --show-info=false --stats --threads=4"

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    timeout-minutes: 5

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"

        dependencies:
          - "lowest"
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.2.2"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.32.0"
        with:
          coverage: "none"
          extensions: "none, bcmath, ctype, curl, dom, intl, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Set up problem matchers for phpunit/phpunit"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/phpunit.json\""

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --ansi --strict"

      - name: "Determine composer cache directory"
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.9.2"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v4"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Remove platform configuration with composer"
        if: "matrix.dependencies != 'locked'"
        run: "composer config platform.php --ansi --unset"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "ergebnis/.github/actions/composer/install@1.9.2"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Run tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --colors=always --configuration=phpunit.xml"
